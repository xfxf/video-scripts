#cloud-config

write_files:
- path: /opt/ndv-jitsi/install-preqreqs.sh
  permissions: 0755
  owner: root
  content: |
    #!/bin/bash -eu
    set -o pipefail

    apt -y update

    DEBIAN_FRONTEND=noninteractive apt -y install awscli curl jq apt-transport-https
    apt-add-repository universe

    apt -y update

- path: /opt/ndv-jitsi/get-tags.sh
  permissions: 0755
  owner: root
  content: |
    #!/bin/bash -eu
    set -o pipefail
    INSTANCE_ID=`curl -s http://instance-data/latest/meta-data/instance-id`
    aws ec2 describe-tags --region ap-southeast-2 --filters "Name=resource-id,Values=$INSTANCE_ID" > /opt/ndv-jitsi/instance-tags.json

- path: /opt/ndv-jitsi/set-hostname.sh
  permissions: 0755
  owner: root
  content: |
    #!/bin/bash -eu
    set -o pipefail

    cd $(dirname "$0")

    TAG_NAME=`jq -r '.Tags[]| select(.Key == "Name")|.Value' /opt/ndv-jitsi/instance-tags.json`
    ZONE_ID="Z09102521YXWQT2ZKMPP7"
    DOMAIN_NAME="aws.nextdayvideo.com.au"

    FQ_HOSTNAME=$TAG_NAME.$DOMAIN_NAME

    hostnamectl set-hostname $FQ_HOSTNAME

    PUBLIC_IP=`curl -s http://instance-data/latest/meta-data/public-ipv4`

    cat <<token > /opt/ndv-jitsi/dns-bach.json
    {
            "Comment": "UPSERT jitsi-meet dns",
            "Changes": [{
                    "Action": "UPSERT",
                    "ResourceRecordSet": {
                            "Name": "$FQ_HOSTNAME",
                            "Type": "A",
                            "TTL": 60,
                            "ResourceRecords": [{ "Value": "$PUBLIC_IP"}]
                    }
            }]
    }
    token
    aws route53 change-resource-record-sets --hosted-zone-id $ZONE_ID --change-batch file:///opt/ndv-jitsi/dns-bach.json
    rm /opt/ndv-jitsi/dns-bach.json

- path: /opt/ndv-jitsi/install-jitsi.sh
  permissions: 0755
  owner: root
  content: |
    #!/bin/bash -eu
    set -o pipefail

    cd $(dirname "$0")
    
    curl https://download.jitsi.org/jitsi-key.gpg.key | sh -c 'gpg --dearmor > /usr/share/keyrings/jitsi-keyring.gpg'
    echo 'deb [signed-by=/usr/share/keyrings/jitsi-keyring.gpg] https://download.jitsi.org stable/' | tee /etc/apt/sources.list.d/jitsi-stable.list > /dev/null

    # update all package sources
    apt update

    JVB_HOSTNAME=`hostname`

    echo "jitsi-videobridge jitsi-videobridge/jvb-hostname string ${JVB_HOSTNAME}" | debconf-set-selections
    echo "jitsi-meet-web-config jitsi-meet/cert-choice select 'Generate a new self-signed certificate (You will later get a chance to obtain a Let's encrypt certificate)'" | debconf-set-selections

    apt-get --option=Dpkg::Options::=--force-confold --option=Dpkg::options::=--force-unsafe-io --assume-yes --quiet install jitsi-meet

    TAG_NAME=`jq -r '.Tags[]| select(.Key == "letsencrypt:email")|.Value' /opt/ndv-jitsi/instance-tags.json`

    echo "$TAG_NAME" | /usr/share/jitsi-meet/scripts/install-letsencrypt-cert.sh

    # make jvb2 actually work.

    update-ca-certificates -f

    systemctl restart jitsi-videobridge2.service

runcmd:
- /opt/ndv-jitsi/install-preqreqs.sh
- /opt/ndv-jitsi/get-tags.sh
- /opt/ndv-jitsi/set-hostname.sh
- /opt/ndv-jitsi/install-jitsi.sh

